package org.mitre.openaria.core.formats.nop;

public enum Facility {
    A11,
    A80,
    A90,
    ABE,
    ABI,
    ABQ,
    ACK,
    ACT,
    ACY,
    AGS,
    ALB,
    ALO,
    AMA,
    ANC,
    ASE,
    AUS,
    AVL,
    AVP,
    AZO,
    BFL,
    BGM,
    BGR,
    BHM,
    BIL,
    BIS,
    BNA,
    BOI,
    BTR,
    BTV,
    BUF,
    C90,
    CAE,
    CAK,
    CHA,
    CHS,
    CID,
    CKB,
    CLE,
    CLT,
    CMH,
    CMI,
    COS,
    COU,
    CPR,
    CRP,
    CRW,
    CVG,
    D01,
    D10,
    D21,
    DAB,
    DLH,
    DSM,
    ELM,
    ELP,
    ERI,
    EUG,
    EVV,
    F11,
    FAI,
    FAR,
    FAT,
    FAY,
    FLO,
    FMH,
    FNT,
    FSD,
    FSM,
    FWA,
    FYV,
    G90,
    GEG,
    GGG,
    GPT,
    GRB,
    GRR,
    GSO,
    GSP,
    GTF,
    HSV,
    HTS,
    HUF,
    I90,
    ICT,
    ILM,
    IND,
    JAN,
    JAX,
    K90,
    L30,
    LAN,
    LAS,
    LBB,
    LCH,
    LEX,
    LFT,
    LIT,
    LYH,
    M03,
    M98,
    MAF,
    MBS,
    MCI,
    MCO,
    MDT,
    MEM,
    MFD,
    MFR,
    MGM,
    MIA,
    MKE,
    MKG,
    MLI,
    MLU,
    MOB,
    MSN,
    MSO,
    MSY,
    MWH,
    MYR,
    N90,
    NCT,
    NMM,
    OKC,
    ORF,
    P31,
    P50,
    P80,
    PBI,
    PCT,
    PHL,
    PIA,
    PIT,
    PSC,
    PWM,
    PVD,
    R90,
    RDG,
    RDU,
    RFD,
    RNO,
    ROA,
    ROC,
    ROW,
    RST,
    RSW,
    S46,
    S56,
    SAT,
    SAV,
    SBA,
    SBN,
    SCT,
    SDF,
    SGF,
    SHV,
    SLC,
    SPI,
    SUX,
    SYR,
    T75,
    TLH,
    TOL,
    TPA,
    TRI,
    TUL,
    TYS,
    U90,
    Y90,
    YKM,
    YNG,
    ZAB,
    ZAU,
    ZBW,
    ZDC,
    ZDV,
    ZFW,
    ZHU,
    ZID,
    ZJX,
    ZKC,
    ZLA,
    ZLC,
    ZMA,
    ZME,
    ZMP,
    ZNY,
    ZOA,
    ZOB,
    ZSE,
    ZSU,
    ZTL,
    ZAN,
    ZUA,
    ZHN,
    AZA;

    /**
     * Convert a String like "A80" or "a80" to the corresponding Facility.A80 object. This method is
     * more flexible than Facility.valueOf(String) because the input string is always converted to
     * uppercase before calling valueOf.
     *
     * @param facilityAsString A case-insensitive 3 letter String that must match one of the
     *                         Facility names.
     *
     * @return The corresponding facility
     */
    public static Facility toFacility(String facilityAsString) {
        if (null == facilityAsString) {
            return null;
        }
        return Facility.valueOf(facilityAsString.toUpperCase());
    }
}
